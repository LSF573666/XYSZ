"""
Django settings for transaction project.

Generated by 'django-admin startproject' using Django 4.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
# from celery import celery

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&9%t3jb%k*rsxnd1g1lc_csftr&gjet9sl#r_c*e9kj&f00+%='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "*"
]

# Application definition

INSTALLED_APPS = [
    "xysz",
    "simpleui",
    'channels',
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_beat',
    'django_celery_results',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'biget.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'biget.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/
LANGUAGE_CODE = "zh-hans"

# 美国时间
# TIME_ZONE = "UTC"
# 中国时间
TIME_ZONE = "Asia/Shanghai"

DATETIME_FORMAT = "Y-n-j G:i:s"
USE_I18N = True

USE_TZ = True

# ASGI_APPLICATION = 'biget.routing.application'

# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://8.216.32.13:6379/0",  # 默认端口6379，数据库0
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#             "PASSWORD": "yyz135246",  # 如果有密码
#         },
#         # "KEY_PREFIX": "myapp_"  # 可选：键前缀
#     }
# }
# 使用 Redis 容器名称（如 'redis'）代替 127.0.0.1
CELERY_BROKER_URL = 'redis://redis:6379/0'
CELERY_RESULT_BACKEND = 'redis://redis:6379/1'

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://redis:6379/0",  # 使用 'redis' 而不是 127.0.0.1
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    }
}

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("redis", 6379)],  # 使用 'redis' 而不是 127.0.0.1
            "symmetric_encryption_keys": None,
            "capacity": 10000,
        },
    }
}

CELERY_TIMEZONE = TIME_ZONE
# CELERY_RESULT_BACKEND = 'django-db'  # 使用数据库存储结果（可选）
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'  # 关键：使用数据库调度

# celery内容等消息的格式设置，默认json
CELERY_ACCEPT_CONTENT = ['application/json', ]
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_TRACK_STARTED = True
# 为任务设置超时时间，单位秒。超时即中止，执行下个任务。
CELERY_TASK_TIME_LIMIT = 300

# 为存储结果设置过期日期，默认1天过期。如果beat开启，Celery每天会自动清除。
# 设为0，存储结果永不过期
CELERY_RESULT_EXPIRES = 10

# 任务限流
CELERY_TASK_ANNOTATIONS = {'tasks.add': {'rate_limit': '10/s'}}
CELERY_TASK_ROUTES = {
    'xysz.tasks.FB_strategy': {'queue': 'celery'}
}


# Worker并发数量，一般默认CPU核数，可以不设置
CELERY_WORKER_CONCURRENCY = 10

# 每个worker执行了多少任务就会死掉，默认是无限的
CELERY_WORKER_MAX_TASKS_PER_CHILD = 200


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

# 额外的静态文件目录
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# collectstatic 命令收集静态文件后的存储目录
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"



# 隐藏右侧SimpleUI广告链接和使用分析
SIMPLEUI_HOME_INFO = False 
SIMPLEUI_ANALYSIS = False 

# 设置默认主题，指向主题css文件名。Admin Lte风格
SIMPLEUI_DEFAULT_THEME = 'admin.lte.css'

# # 设置默认主题，指向主题css文件名。Element-ui风格
# SIMPLEUI_DEFAULT_THEME = 'element.css'

# # 设置默认主题，指向主题css文件名。layui风格
# SIMPLEUI_DEFAULT_THEME = 'layui.css'

# # 设置默认主题，指向主题css文件名。紫色风格
# SIMPLEUI_DEFAULT_THEME = 'purple.css'

SIMPLEUI_CONFIG = {
     # 是否使用系统默认菜单。
    'system_keep': False,
    
     # 用于菜单排序和过滤, 不填此字段为默认排序和全部显示。 空列表[] 为全部不显示.
    'menu_display': ['用户管理', '用户订单', '权限认证','任务管理', '定时任务', '任务结果'],
    
    # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时刷新展示菜单内容。
    # 一般建议关闭。
    'dynamic': False,
    'menus': [
        {
            'app': 'auth',
            'name': '权限认证',
            'icon': 'fas fa-user-shield',
            'models': [
                {
                'name': '用户列表',
                'icon': 'fa fa-user',
                'url': '/admin/auth/user/'
                },
                {
                    'name': '用户组',
                    'icon': 'fa fa-th-list',
                    'url': '/admin/auth/group/'
                }
            ]
        },

        {
            'name': '用户管理',
            'icon': 'fa fa-th-list',
            'models': [
                {
                'name': '用户配置',
                # 注意url按'/admin/应用名小写/模型名小写/'命名。  
                'url': '/admin/biget/userconfig/',
                'icon': 'fa fa-tasks'
                },
                {
                'name': '用户账户列表',
                # 注意url按'/admin/应用名小写/模型名小写/'命名。  
                'url': '/admin/biget/useraccount/',
                'icon': 'fa fa-tasks'
                },
                {
                'name': '用户账户余额列表',
                # 注意url按'/admin/应用名小写/模型名小写/'命名。  
                'url': '/admin/biget/userbal/',
                'icon': 'fa fa-tasks'
                },
            ]
        },
        {
            'name': '用户订单',
            'icon': 'fa fa-th-list',
            'models': [
                {
                'name': '用户持仓信息',
                # 注意url按'/admin/应用名小写/模型名小写/'命名。  
                'url': '/admin/biget/userorder/',
                'icon': 'fa fa-tasks'
                },
                {
                'name': '用户订单信息',
                # 注意url按'/admin/应用名小写/模型名小写/'命名。  
                'url': '/admin/biget/ballist/',
                'icon': 'fa fa-tasks'
                },
            ]
        },
        {
            'name': '定时任务',
            'icon': 'fa fa-clock',
            'models': [
                {
                    'name': '周期任务',
                    'icon': 'fa fa-redo',
                    'url': 'admin/django_celery_beat/periodictask/'
                },
                {
                    'name': '间隔任务',
                    'icon': 'fa fa-stopwatch',
                    'url': 'admin/django_celery_beat/intervalschedule/'
                },
                {
                    'name': 'Crontab任务',
                    'icon': 'fa fa-calendar-alt',
                    'url': 'admin/django_celery_beat/crontabschedule/'
                }
            ]
        },
        {
            'name': '任务结果',
            'icon': 'fa fa-database',
            'url': 'admin/django_celery_results/taskresult/'
        }
    ]
}


